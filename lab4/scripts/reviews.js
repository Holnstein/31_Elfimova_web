import {getCookie, setCookie, deleteCookie} from './cookie.js';


const reviewForm = document.getElementById('review-form');
const nameInput = document.getElementById('name');
const textInput = document.getElementById('text');
const ratingInput = document.getElementById('rating');
const reviewContainer = document.getElementById('review-container');
const filterSelect = document.getElementById('filter');
const sortSelect = document.getElementById('sort');
const imageInput = document.getElementById('image');

const constReviews = [
    {name: "–ê–±—É", text: "–í–µ—Å—å –î–≤–∞—á –ª–µ–≥ –ø–æ–¥ —ç—Ç–æ—Ç –∫–∞–º–µ–Ω—å, –∞ —è –≤ –Ω–µ–º - –¥—ã—Ä–∫–∞.", rating: 5, date: "2024-03-01T10:00:00Z"},
    {name: "–°—Ç—Ä—ã–∫–∞–ª–æ", text: "–ú–∞–º–∞, –ø—Ä–æ—Å—Ç–∏. –ü–∞–ø–∞, –ø—Ä–æ—Å—Ç–∏. –Ø –Ω–µ –∫—É–ø–∏–ª...", rating: 2, date: "2024-03-02T10:00:00Z"},
    {name: "–ß—å—è-—Ç–æ –º–∞—Ç—å –∏–∑ –î–æ—Ç—ã", text: "–ü–æ–º–æ–≥–∏—Ç–µüôà. –°—ã–Ω –±–æ–ª—å—à–µ –Ω–µ —Å–ª—É—à–∞–µ—Ç –º–µ–Ω—è üò¨. –ó–∞–±–ª–æ–∫–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∞–π—Ç –º–æ–µ–º—É —Å—ã–Ω—É–ª–µ üí©‚úîÔ∏è", rating: 1, date: "2024-03-02T10:00:00Z"},
    {name: "–ú–∏—Ö–∞–∏–ª", text: "–í–æ–∏—Å—Ç–∏–Ω—É –≤–µ–ª–∏–∫–∏–π –∫–∞–º–µ–Ω—å. –ü—Ä–æ—Å–≤—è—â–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –≤–µ–Ω–æ–∑–Ω—É—é –Ω–∞—Ä—è–¥—É —Å –∫–∞–≥–æ—Ä–æ–º —Ü–µ—Ä–∫–æ–≤–Ω—ã–º. –ê–º–µ–Ω—å.", rating: 5, date: "2024-03-03T10:00:00Z"},
    {name: "Slipknot", text: "–£-–∞-–∞-–∞-–∞-–∞", rating: 5, date: "2024-03-04T10:00:00Z"},
    {name: "–ù–µ—Ä–≤—ã", text: "–≠—Ç–∏–º –∫–∞–º–Ω–µ–º –º—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Å–µ–±–µ –ù–µ—Ä–≤—ã—ã-—ã-—ã-—ã—ã", rating: 4, date: "2024-02-05T10:00:00Z"},
    {name: "–ì—Ä—è–∑–Ω–∞—è –≥—Ä—è–∑—å", text: "–°–∫–∏–Ω—É–ª–∞ –Ω–∞ –ª–µ—á–µ–Ω–∏–µ —Å–∞–º–æ–π —Å–µ–±–µ", rating: 1, date: "2024-02-05T10:15:00Z"},
    {name: "–ü–æ—à–ª–∞—è –ú–æ–ª–ª–∏", text: "–õ—é–±–ª—é –ª–æ–≤–∏—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏ –¥—ã—Ä–∫–æ–π –∫–∞–º–Ω—è.", rating: 5, date: "2024-02-05T11:00:00Z"},
    {name: "–ê—Ä—Ç–∞—Å", text: "–ß–µ–ª–æ–≤–µ—á–∫–∏ –æ—Ü–µ–Ω—è—Ç. –î—ã—Ä–∫–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –Ω–∏–∫—É–¥–∞ - 2 –∏–∑ 5. –ö–∞–º–µ–Ω—å –¥–æ–ª–≥–æ –Ω–∞–≥—Ä–µ–≤–∞–µ—Ç—Å—è –≤ —Ä—É–∫–µ 1 –∏–∑ 5. –õ—è–≥ —Å–ø–∞—Ç—å - 5 –∏–∑ 5. –°–æ–≥–ª–∞—Å–µ–Ω —Å –ü–æ–¥–Ω–µ–±–µ—Å–Ω—ã–º", rating: 1, date: "2024-02-05T11:00:00Z"},
    {name: "–ü–æ–¥–Ω–µ–±–µ—Å–Ω—ã–π", text: "–ö—Ä–æ–º–∞–Ω—å–æ–Ω–∫–∞ –Ω–µ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª–∞. –í–∏–¥–∏–º–æ, –±—ã–ª–∞ —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–æ–π.", rating: 5, date: "2024-02-05T09:00:00Z"},
];

// let reviews = JSON.parse(getCookie('reviews')) || [];
let reviews = getCookie('reviews') ? JSON.parse(getCookie('reviews')) : [];

function loadReviews() {
    // const savedReviews = getCookie('reviews');
    // if (savedReviews) {
    //     reviews = JSON.parse(savedReviews);
    // }
    displayReviews();
}

const reviewsPerPage = 5;
let currentReviewIndex = 0;

function displayReviews() {
    console.log("currentReviewIndex:", currentReviewIndex);

    const filterValue = filterSelect.value;
    const sortValue = sortSelect.value;

    const allReviews = [...constReviews, ...reviews];

    const sortedReviews = allReviews.filter(review => {
        return filterValue === 'all' || review.rating === parseInt(filterValue);
    });

    if (sortValue === 'rating_high') {
        sortedReviews.sort((a, b) => b.rating - a.rating);
    } else if (sortValue === 'rating_low') {
        sortedReviews.sort((a, b) => a.rating - b.rating);
    } else if (sortValue === 'date_new') {
        sortedReviews.sort((a, b) => new Date(b.date) - new Date(a.date));
    } else if (sortValue === 'date_old') {
        sortedReviews.sort((a, b) => new Date(a.date) - new Date(b.date));
    }

    // if (reset) {
    //     currentReviewIndex = 0;
    //     reviewContainer.innerHTML = '';
    // }
    reviewContainer.innerHTML = '';
    const nextReviews = sortedReviews.slice(currentReviewIndex, currentReviewIndex + reviewsPerPage);

    nextReviews.forEach(review => {
        const reviewElement = document.createElement('div');
        reviewElement.classList.add('review');
        
        reviewElement.innerHTML = `
            <h3 id="name-review">${review.name}</h3>
            <p>${review.text}</p>
            <p class="rating">${'üíé'.repeat(review.rating)}</p>
            ${review.imageUrl ? `<img src="${review.imageUrl}" alt="" class="review-image">` : ''}
        `;
        
        reviewContainer.append(reviewElement);
    });

    // currentReviewIndex += reviewsPerPage;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤
reviewForm.addEventListener('submit', function(event) {
    event.preventDefault();
    
    const name = nameInput.value.trim();
    const text = textInput.value.trim();
    const rating = parseInt(ratingInput.value);
    const image = imageInput.files[0];

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—Å–µ –≤–≤–µ–¥–µ–Ω–æ –Ω–æ—Ä–º—É–ª—å
    if (name && text && rating >= 1 && rating <= 5) {
        const newReview = {
            name,
            text,
            rating,
            date: new Date().toISOString(),
            imageUrl: image ? URL.createObjectURL(image) : null,
        };

        if(newReview.rating >= 3){
            reviews.unshift(newReview);
            setCookie('reviews', JSON.stringify(reviews), 3); // –õ–µ—Ç–∏—Ç –≤ –∫—É–∫–∏ –Ω–∞ 3 –¥–Ω—è
        }
        else{
            alert("–¢—ã –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è –≤ —Ü–∏—Ñ–µ—Ä–∫–µ, –Ω–æ –Ω–µ –≤–æ–ª–Ω—É–π—Å—è, –æ–Ω –±—É–¥–µ—Ç –≤ –ª–µ–Ω—Ç–µ –¥–æ –ø–æ—Ä—ã –¥–æ –≤—Ä–µ–º–µ–Ω–∏.");
            constReviews.push(newReview);
        }
        displayReviews(); // –û–±–Ω–æ–≤–ª—è–µ–º –ª–µ–Ω—Ç—É –æ—Ç–∑—ã–≤–æ–≤
    } else {
        alert('–ë—É–¥—å –ø–æ—Å–ª—É—à–Ω—ã–º –∫—Ä–æ–º–∞–Ω—å–æ–Ω—Ü–µ–º. –ù–∞–ø–∏—à–∏ —Ö–æ—Ä–æ—à–∏–π –æ—Ç–∑—ã–≤, —á—Ç–æ–±—ã –º—ã –∑–Ω–∞–ª–∏ —Ç–≤–æ–µ –∏–º—è, —Ç–≤–æ–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è –∏ —Ç–≤–æ—é –∫—Ä–∞—Å–∏–≤—É—é –æ—Ü–µ–Ω–∫—É –Ω–∞—à–µ–≥–æ –∫–∞–º–Ω—è. –ú—ã –Ω–µ –Ω–∞–π–¥–µ–º —Ç–µ–±—è –ø–æ IP. ' + 
            '\n\t\t\t–ü–æ—Ç–æ–º—É —á—Ç–æ —è –Ω–µ —É–º–µ—é');
    }

    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    reviewForm.reset();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
filterSelect.addEventListener('change', displayReviews);
sortSelect.addEventListener('change', displayReviews);

// window.addEventListener('scroll', () => {
//     if (reviewContainer.scrollTop + reviewContainer.clientHeight >= reviewContainer.scrollHeight) {
//         displayReviews();
//     }
// });

// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–ø–µ—Ä—ë–¥
document.getElementById('next-btn').addEventListener('click', () => {
    const allReviews = [...constReviews, ...reviews];

    // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª–æ
    if (currentReviewIndex + reviewsPerPage < allReviews.length) {
        currentReviewIndex += reviewsPerPage;
    } else {
        currentReviewIndex = 0; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—á–∞–ª—É
    }
    
    displayReviews();
});

// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–∑–∞–¥
document.getElementById('prev-btn').addEventListener('click', () => {
    const allReviews = [...constReviews, ...reviews];
    if (currentReviewIndex - reviewsPerPage >= 0) {
        currentReviewIndex -= reviewsPerPage;
    } 
    // else {
    //     currentReviewIndex = 0;
    // }
    
    displayReviews();
});

// –ø—Ä–µ–≤—å—é—à–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const imagePreviewContainer = document.getElementById('image-preview');


window.addEventListener('load', function() {
    imagePreviewContainer.innerHTML = '–í—ã–±–µ—Ä–∏ –∫–∞—Ä—Ç–∏–Ω–æ—á–∫—É-–º–∞–ª—ã—à–µ—á–∫—É';
});

imageInput.addEventListener('change', function(event){
    
    const file = event.target.files[0];
    console.log('–§–∞–π–ª –≤—ã–±—Ä–∞–Ω:', file);

    if (!file) {
        imagePreviewContainer.innerHTML = '–í—ã–±–µ—Ä–∏ –∫–∞—Ä—Ç–∏–Ω–æ—á–∫—É-–º–∞–ª—ã—à–µ—á–∫—É –µ—â–µ —Ä–∞–∑';
        return;
    }

    const allowedFormats = ['image/jpeg', 'image/png', 'image/gif', 'image/svg'];
    if(!allowedFormats.includes(file.type)){
        alert("–ó–∞—Å—É–Ω—å –∫–∞—Ä—Ç–∏–Ω–æ—á–∫—É –∏–ª–∏ –≥–∏—Ñ–∫—É.");
        imageInput.value = '';
        imagePreviewContainer.innerHTML = '';
        return;
    }

    const reader = new FileReader();

        reader.onload = function(e){
            const img = document.createElement('img');
            img.src = e.target.result;

            imagePreviewContainer.innerHTML = '';
            imagePreviewContainer.appendChild(img);
        };

    reader.readAsDataURL(file);    
});


loadReviews();
// deleteCookie('reviews');


